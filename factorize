from multiprocessing import Pool, cpu_count
import time

def factorize_sync(*numbers):
    results = []
    for num in numbers:
        factors = []
        for i in range(1, num + 1):
            if num % i == 0:
                factors.append(i)
        results.append(factors)
    return results

def factorize_number(num):
    factors = []
    for i in range(1, num + 1):
        if num % i == 0:
            factors.append(i)
    return factors

def factorize_parallel(*numbers):
    with Pool(cpu_count()) as pool:
        results = pool.map(factorize_number, numbers)
    return results

if __name__ == "__main__":
    numbers = [128, 255, 99999, 10651060]

    # Синхронна версія
    start_time = time.time()
    results_sync = factorize_sync(*numbers)
    end_time = time.time()
    print("Синхронна версія зайняла час:", end_time - start_time)

    # Паралельна версія
    start_time = time.time()
    results_parallel = factorize_parallel(*numbers)
    end_time = time.time()
    print("Паралельна версія зайняла час:", end_time - start_time)

    # Перевірка результатів
    a, b, c, d = results_parallel
    assert a == [1, 2, 4, 8, 16, 32, 64, 128]
    assert b == [1, 3, 5, 15, 17, 51, 85, 255]
    assert c == [1, 3, 9, 41, 123, 271, 369, 813, 2439, 11111, 33333, 99999]
    assert d == [1, 2, 4, 5, 7, 10, 14, 20, 28, 35, 70, 140, 76079, 152158, 304316, 380395, 532553, 760790, 1065106, 1521580, 2130212, 2662765, 5325530, 10651060]
